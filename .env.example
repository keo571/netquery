# Netquery Configuration Template
# Copy this to .env and fill in your values

# ============================================================================
# LLM Configuration (Required)
# ============================================================================
GEMINI_API_KEY=your_gemini_api_key_here

# ============================================================================
# Database Configuration
# ============================================================================

# Development: SQLite (simple, no setup)
# DATABASE_URL=sqlite:///data/infrastructure.db

# Production-like: PostgreSQL (Docker)
DATABASE_URL=postgresql://netquery:netquery_dev_password@localhost:5432/netquery

# Production: Client's PostgreSQL (remote)
# DATABASE_URL=postgresql://user:password@client-host:5432/client-db

# ============================================================================
# Embedding Storage Configuration
# ============================================================================

# Default: Local file cache (no database needed)
# Embeddings stored in .embeddings_cache/ directory
# Leave empty or commented out to use local cache

# Optional: Use pgvector in PostgreSQL (if you need it)
# EMBEDDING_DATABASE_URL=postgresql://netquery:netquery_dev_password@localhost:5432/netquery

# ============================================================================
# Logging Configuration
# ============================================================================
LOG_LEVEL=INFO

# ============================================================================
# Quick Start with PostgreSQL
# ============================================================================
# 1. Start PostgreSQL:    docker-compose up -d
# 2. Copy this file:      cp .env.example .env
# 3. Add your API key to .env
# 4. Create sample data:  python scripts/create_sample_data.py
# 5. Build schema:        python scripts/schema_ingest.py build --output schemas/prod.json
# 6. Query database:      python gemini_cli.py "Show me all load balancers"
#
# See GETTING_STARTED.md for details

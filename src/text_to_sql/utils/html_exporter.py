"""
Clean HTML export with beautiful styling.
"""
from datetime import datetime
from pathlib import Path
from typing import Optional
import markdown2


def export_to_html(
    query: str,
    response: str,
    filename: Optional[str] = None,
    chart_html: Optional[str] = None,
    **kwargs  # Accept any extra args but ignore them
) -> str:
    """Export markdown response to beautiful HTML."""
    
    # Create exports directory
    Path("query_exports").mkdir(exist_ok=True)
    
    # Generate filename if not provided
    if not filename:
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        query_id = abs(hash(query)) % 10000
        filename = f"query_exports/query_{query_id}_{timestamp}.html"
    
    # Convert markdown to HTML (without syntax highlighting to keep it clean)
    html_content = markdown2.markdown(response, extras=['tables', 'fenced-code-blocks'])
    
    # Create complete HTML document with beautiful styling
    html_doc = f"""<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Netquery Report</title>
    <style>
        body {{
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 800px;
            margin: 0 auto;
            padding: 40px;
            background: #fff;
        }}
        h1, h2, h3 {{
            color: #2c3e50;
            margin-top: 2em;
            margin-bottom: 0.5em;
        }}
        h1 {{ font-size: 24px; border-bottom: 2px solid #3498db; padding-bottom: 10px; }}
        h2 {{ font-size: 20px; border-bottom: 1px solid #bdc3c7; padding-bottom: 5px; }}
        h3 {{ font-size: 16px; }}
        
        code {{
            background-color: #f8f9fa;
            padding: 2px 4px;
            border-radius: 3px;
            font-family: 'Courier New', monospace;
            font-size: 0.9em;
            color: #e83e8c;
        }}
        
        pre {{
            background-color: #f8f9fa;
            border: 1px solid #e1e4e8;
            border-radius: 6px;
            padding: 16px;
            overflow-x: auto;
            font-family: 'Courier New', monospace;
            font-size: 0.85em;
        }}
        
        /* Clean up syntax highlighting spans */
        .codehilite {{
            background: transparent;
        }}
        
        .codehilite pre {{
            background-color: #f8f9fa;
        }}
        
        .codehilite span {{
            color: inherit !important;
        }}
        
        table {{
            border-collapse: collapse;
            width: 100%;
            margin: 1em 0;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }}
        
        th, td {{
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }}
        
        th {{
            background-color: #f8f9fa;
            font-weight: bold;
            color: #2c3e50;
        }}
        
        tr:nth-child(even) {{
            background-color: #f9f9f9;
        }}
        
        tr:hover {{
            background-color: #f5f5f5;
        }}
        
        ul, ol {{
            margin: 1em 0;
            padding-left: 2em;
        }}
        
        li {{
            margin: 0.5em 0;
        }}
        
        strong {{
            color: #2c3e50;
            font-weight: 600;
        }}
        
        em {{
            color: #7f8c8d;
            font-style: italic;
        }}
        
        .header {{
            text-align: center;
            margin-bottom: 2em;
            padding-bottom: 1em;
            border-bottom: 2px solid #3498db;
        }}
        
        .footer {{
            margin-top: 2em;
            padding-top: 1em;
            border-top: 1px solid #bdc3c7;
            font-size: 0.9em;
            color: #7f8c8d;
            text-align: center;
        }}
    </style>
</head>
<body>
    <div class="header">
        <h1>Netquery Report</h1>
        <p><strong>Query:</strong> "{query}"</p>
        <p>Generated on {datetime.now().strftime('%B %d, %Y at %I:%M %p')}</p>
    </div>
    
    {html_content}
    
    {chart_html or ""}
    
    <div class="footer">
        <p>Generated by Netquery Text-to-SQL System</p>
    </div>
</body>
</html>"""
    
    # Save HTML file
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(html_doc)
    
    return filename


def create_html_from_cli_output(
    query: str, 
    full_output: str, 
    chart_html: Optional[str] = None,
    **kwargs  # Accept any extra args but ignore them
) -> str:
    """Create HTML from CLI markdown output."""
    return export_to_html(query=query, response=full_output, chart_html=chart_html)